Inspired by omailson's dotvim (https://github.com/omailson/dotvim)

== Dependencies ==

Some that I can remember now:

python27
git

== Steps to use ==

Run in the root project dir:

By default the configuration is created for NeoVim. If you want to work with Vim, use the -v flag in your commands

$ ./setup.py [--setup]
    -> only creates the ground stuff needed for installation but does not install it (useful to update vundle.vim)
    This will:

    * Create a minimal vimrc file, that will source the real vim configuration file -> dotvimrc.vim
      You can edit the dotvimrc.vim file to reflect your preferences.
    * Create a plugins dir and clone vundle plugin manager in it (this dir will also contain all plugins installed by
      vundle later)
    * Create a .backup and .tmp dir, for backup and temporary files, respectively

$ ./setup.py --install
    -> setup all the ground stuff need for the installation (see above) and installs dotvim (basically creating a
       symlink in your home dir (n)vim configuration file to the vimrc inside the project folder)

$ ./setup.py --uninstall
    -> remove the installed configuration file from your home folder

$ ./setup.py --clean
   -> wipe everything out, setting the project to a clean state (like if it was just cloned)

Have Fun!
